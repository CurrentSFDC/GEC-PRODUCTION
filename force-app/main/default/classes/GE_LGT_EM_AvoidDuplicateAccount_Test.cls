@isTest
private class GE_LGT_EM_AvoidDuplicateAccount_Test
{
    static testMethod void testduplicatecheck1()
    {
        List<TriggerSwitch__c> switchList=new List<TriggerSwitch__c>();
        TriggerSwitch__c TriggerSwitch1=TestDataUtil.createTriggerSwitch('GE_LGT_AddOptyTeamFromAccOwner', true);
        SwitchList.add(TriggerSwitch1);
        TriggerSwitch__c TriggerSwitch2=TestDataUtil.createTriggerSwitch('GE_LGT_EM_AvoidDuplicateAccount', true);
        SwitchList.add(TriggerSwitch2);
        TriggerSwitch__c TriggerSwitch3=TestDataUtil.createTriggerSwitch('GE_LGT_EM_OppProductHistory', true);
        SwitchList.add(TriggerSwitch3);
        TriggerSwitch__c TriggerSwitch4=TestDataUtil.createTriggerSwitch('GE_LGT_OpportunityInsertUpdateDelete', true);
        SwitchList.add(TriggerSwitch4);
        TriggerSwitch__c TriggerSwitch5=TestDataUtil.createTriggerSwitch('GE_LGT_OpptyBefInsBefUpdtAftIns', true);
        SwitchList.add(TriggerSwitch5);
        TriggerSwitch__c TriggerSwitch6=TestDataUtil.createTriggerSwitch('GE_LGT_preventDuplicateAccount', true);
        SwitchList.add(TriggerSwitch6);
        TriggerSwitch__c TriggerSwitch7=TestDataUtil.createTriggerSwitch('GE_LGT_Project_Triggers', true);
        SwitchList.add(TriggerSwitch7);
        TriggerSwitch__c TriggerSwitch8=TestDataUtil.createTriggerSwitch('GE_LGT_ShipDateShouldBeGTPODate', true);
        SwitchList.add(TriggerSwitch8);
        TriggerSwitch__c TriggerSwitch9=TestDataUtil.createTriggerSwitch('OpportunityTrigger', true);
        SwitchList.add(TriggerSwitch9);
        TriggerSwitch__c TriggerSwitch10=TestDataUtil.createTriggerSwitch('OppPusher', true);
        SwitchList.add(TriggerSwitch10);
        TriggerSwitch__c TriggerSwitch11=TestDataUtil.createTriggerSwitch('OrderLineItemUpdate', true);
        SwitchList.add(TriggerSwitch11);
        TriggerSwitch__c TriggerSwitch12=TestDataUtil.createTriggerSwitch('OrderTrigger', true);
        SwitchList.add(TriggerSwitch12);
        TriggerSwitch__c TriggerSwitch13=TestDataUtil.createTriggerSwitch('QuoteLineItemUpdate', true);
        SwitchList.add(TriggerSwitch13);
        TriggerSwitch__c TriggerSwitch14=TestDataUtil.createTriggerSwitch('QuoteTrigger', true);
        SwitchList.add(TriggerSwitch14);
        TriggerSwitch__c TriggerSwitch15=TestDataUtil.createTriggerSwitch('SAPQuoteItemUpdate', true);
        SwitchList.add(TriggerSwitch15);
        TriggerSwitch__c TriggerSwitch16=TestDataUtil.createTriggerSwitch('SAPQuoteUpdate', true);
        SwitchList.add(TriggerSwitch16);
        TriggerSwitch__c TriggerSwitch17=TestDataUtil.createTriggerSwitch('Trigger_Account', true);
        SwitchList.add(TriggerSwitch17);
        TriggerSwitch__c TriggerSwitch18=TestDataUtil.createTriggerSwitch('Update_Pricebook2ids', true);
        SwitchList.add(TriggerSwitch18);
        TriggerSwitch__c TriggerSwitch19=TestDataUtil.createTriggerSwitch('AccountTrigger', true);
        SwitchList.add(TriggerSwitch19);
        insert switchList;
        Account_KeyValue_Store__c aks = new Account_KeyValue_Store__c();
        aks.FieldName__c ='Vertical';
        aks.name='1000001';
        insert aks;
        Account_KeyValue_Store__c aks1 = new Account_KeyValue_Store__c();
        aks1.FieldName__c ='Sub Vertical';
        aks1.name='1000018';
        insert aks1;
        Account_KeyValue_Store__c aks2 = new Account_KeyValue_Store__c();
        aks2.FieldName__c ='SalesOffice';
        aks2.name='1000133';
        insert aks2;
        Account_KeyValue_Store__c aks3 = new Account_KeyValue_Store__c();
        aks3.FieldName__c ='SalesGroup';
        aks3.name='1000002';
        insert aks3;
        id  rt=[select id,name from recordtype where sobjecttype='Account' and name='SAP Account'].id;
        Account newacc=TestDataUtil.createAccount();
        newacc.BillingStreet='3street';
        newacc.BillingCity='Hyderabad';
        newacc.BillingState='Telanagana';
        newacc.BillingCountry='India';
        newacc.BillingPostalCode='500013';
        newacc.GE_LGT_EM_CustomerActiveFlag__c=false;
        newacc.GE_LGT_EM_Tax_Number_1__c=12;
        newacc.GE_LGT_EM_Tax_Number_2__c=34;
        newacc.Account_Group__c='test';
        newacc.GE_LGT_Sales_Group__c='test12';
        newacc.GE_LGT_Sales_Office__c='test13';
        newacc.Owner_SSO__c='502432124';
        //newacc.GE_LGT_Vertical__c='Administrative & Support Services';
        //newacc.GE_LGT_Sub_Vertical__c='Convention & Trade Show Organizers';
        newacc.GE_LGT_EM_SAP_Customer_Number__c='102013';
        newacc.GE_LGT_EM_SAPUniqueIdentifier__c='999999-1US1-10-Z4';
        newacc.RecordTypeid=rt;
        //newacc.GE_LGT_EM_Sales_Org__c='1US1';
        //newacc.GE_LGT_EM_Division__c='10';
        //newacc.GE_LGT_EM_PF_Type__c='SP';
        //newacc.GE_LGT_EM_Distribution_Channel__c='20-Professional';
        newacc.GE_LGT_C_I__c=true;
        newacc.GE_LGT_Utility__c=true;
        newacc.GE_LGT_Controls__c=true;
        newacc.GE_LGT_Roadway__c=true;
        newacc.Others__c=true;
        newacc.Lamp_Ballast__c=true;
        newacc.GE_LGT_Architecture__c=true;
        newacc.GE_LGT_DOT__c=true;
        newacc.GE_LGT_Sports__c=true;
        newacc.GE_LGT_Rep_Code__c='501';
        newacc.GE_LGT_EM_Deletion_Flag__c='X';
        //newacc.name='SP';
        insert newacc;
        
        id  rt1=[select id,name from recordtype where sobjecttype='Account' and name='SAP Account'].id;
        Account newacc1=TestDataUtil.createAccount();
        /*newacc1.BillingStreet='3street';
        newacc1.BillingCity='Hyderabad';
        newacc1.BillingState='Telanagana';
        newacc1.BillingCountry='India';
        newacc1.BillingPostalCode='500013';
        newacc1.GE_LGT_EM_CustomerActiveFlag__c=false;
        newacc1.GE_LGT_EM_Tax_Number_1__c=12;
        newacc1.GE_LGT_EM_Tax_Number_2__c=34;
        newacc1.Account_Group__c='test';
        newacc1.GE_LGT_Sales_Group__c='test12';
        newacc1.GE_LGT_Sales_Office__c='test13';
        newacc1.Owner_SSO__c='502432124';
        //newacc1.GE_LGT_Vertical__c='Administrative & Support Services';
        //newacc1.GE_LGT_Sub_Vertical__c='Convention & Trade Show Organizers';
        newacc1.GE_LGT_EM_SAP_Customer_Number__c='102013';
        newacc1.RecordTypeid=rt1;
        //newacc1.GE_LGT_EM_Sales_Org__c='2FRI';
        //newacc1.GE_LGT_EM_Division__c='10-products';
        //newacc1.GE_LGT_EM_PF_Type__c='SP';
       // newacc1.GE_LGT_EM_Distribution_Channel__c='10-Consumer';*/
        insert newacc1;
        id  rt2=[select id,name from recordtype where sobjecttype='Account' and name='SAP Account - Strategic'].id;
        id  rt3=[select id,name from recordtype where sobjecttype='Account' and name='End User'].id;
        Account newacc2=TestDataUtil.createAccount();
        /*newacc2.BillingStreet='3street';
        newacc2.BillingCity='Hyderabad';
        newacc2.BillingState='Telanagana';
        newacc2.BillingCountry='India';
        newacc2.BillingPostalCode='500013';
        //newacc2.GE_LGT_EM_CustomerActiveFlag__c=true;
        newacc2.GE_LGT_EM_Tax_Number_1__c=12;
        newacc2.GE_LGT_EM_Tax_Number_2__c=34;
        newacc2.Account_Group__c='test';
        newacc2.GE_LGT_Sales_Group__c='test12';
        newacc2.GE_LGT_Sales_Office__c='test13';
        newacc2.Owner_SSO__c='502432124';
        //newacc2.GE_LGT_Vertical__c='Administrative & Support Services';
        //newacc2.GE_LGT_Sub_Vertical__c='Convention & Trade Show Organizers';
        newacc2.GE_LGT_EM_SAP_Customer_Number__c='1020132345';
        newacc2.RecordTypeid=rt1;
        //newacc2.GE_LGT_EM_Sales_Org__c='2FRI';
        //newacc2.GE_LGT_EM_Division__c='10-products';
        //newacc2.GE_LGT_EM_PF_Type__c='SP';
        //newacc2.GE_LGT_EM_Distribution_Channel__c='10-Consumer';
        newacc2.GE_LGT_EM_CustomerActiveFlag__c=false;*/
        insert newacc2;
        newacc2.RecordTypeid=rt3;
        newacc2.Act_Converted_to_End_User__c=true;
        update newacc2;
        delete newacc2;
        Profile objProfile = [Select Id, Name from Profile where Name =: 'EUROPE Current Super User' limit 1];
        User u = TestDataUtil.createUser(objProfile.id,'newuser.GE@testorg.com');
        insert u;
        id  rt4=[select id,name from recordtype where sobjecttype='Account' and name='SAP Account - Strategic'].id;
        Account newacc3=TestDataUtil.createAccount();
        /*newacc3.Ownerid=u.id;
        newacc3.BillingStreet='3street';
        newacc3.BillingCity='Hyderabad';
        newacc3.BillingState='Telanagana';
        newacc3.BillingCountry='India';
        newacc3.BillingPostalCode='500013';
        newacc3.GE_LGT_EM_CustomerActiveFlag__c=true;
        newacc3.GE_LGT_EM_Tax_Number_1__c=12;
        newacc3.GE_LGT_EM_Tax_Number_2__c=34;
        newacc3.Account_Group__c='test';
        newacc3.GE_LGT_Sales_Group__c='test12';
        newacc3.GE_LGT_Sales_Office__c='test13';
        newacc3.Owner_SSO__c='502432124';
        //newacc3.GE_LGT_Vertical__c='Administrative & Support Services';
        //newacc3.GE_LGT_Sub_Vertical__c='Convention & Trade Show Organizers';
        newacc3.GE_LGT_EM_SAP_Customer_Number__c='1020132345';
        newacc3.RecordTypeid=rt4;
       //newacc3.GE_LGT_EM_Sales_Org__c='2FRI';
        //newacc3.GE_LGT_EM_Division__c='10-products';
        //newacc3.GE_LGT_EM_PF_Type__c='SP';
        //newacc3.GE_LGT_EM_Distribution_Channel__c='10-Consumer';
        newacc3.GE_LGT_EM_Deletion_Flag__c='';
        //newacc3.GE_LGT_EM_CustomerActiveFlag__c=false;*/
        insert newacc3;
        List<Account> accList=new List<Account>();
        accList.add(newacc1);
        accList.add(newacc2);
        accList.add(newacc3);
        AccountTriggerHelper ath=new AccountTriggerHelper();
        ath.updateTeamMembersOnAccount(accList);
        id  rt_enduser=[select id,name from recordtype where sobjecttype='Account' and name='End User'].id;
        Account newacc_enduser=TestDataUtil.createAccount();
        /*newacc_enduser.BillingStreet='3street';
        newacc_enduser.BillingCity='Hyderabad';
        newacc_enduser.BillingState='Telanagana';
        newacc_enduser.BillingCountry='India';
        newacc_enduser.BillingPostalCode='500013';
        //newacc_enduser.GE_LGT_EM_CustomerActiveFlag__c=true;
        newacc_enduser.GE_LGT_EM_Tax_Number_1__c=12;
        newacc_enduser.GE_LGT_EM_Tax_Number_2__c=34;
        newacc_enduser.Account_Group__c='test';
        newacc_enduser.GE_LGT_Sales_Group__c='test12';
        newacc_enduser.GE_LGT_Sales_Office__c='test13';
        newacc_enduser.Owner_SSO__c='502432124';
        //newacc_enduser.GE_LGT_Vertical__c='Administrative & Support Services';
        //newacc_enduser.GE_LGT_Sub_Vertical__c='Convention & Trade Show Organizers';
        newacc_enduser.GE_LGT_EM_SAP_Customer_Number__c='1020132345_t';
        newacc_enduser.RecordTypeid=rt_enduser;
        //newacc_enduser.GE_LGT_EM_Sales_Org__c='2FRI';
        //newacc_enduser.GE_LGT_EM_Division__c='10-products';
        //newacc_enduser.GE_LGT_EM_PF_Type__c='SP';
        //newacc_enduser.GE_LGT_EM_Distribution_Channel__c='10-Consumer';
        newacc_enduser.GE_LGT_EM_CustomerActiveFlag__c=false;
        newacc_enduser.Act_Converted_to_End_User__c=true;*/
        insert newacc_enduser;
        delete newacc_enduser;
        
    }
    
    //Added by Shyam for updateParentFixtureInformation method in AccountTriggerHelper - KAFZY-1942
    static testMethod void updateFixtureAgentInformationTest()
    {
        List<TriggerSwitch__c> switchList=new List<TriggerSwitch__c>();
        TriggerSwitch__c TriggerSwitch1=TestDataUtil.createTriggerSwitch('GE_LGT_EM_AvoidDuplicateAccount', true);
        SwitchList.add(TriggerSwitch1);
        TriggerSwitch__c TriggerSwitch2=TestDataUtil.createTriggerSwitch('GE_LGT_preventDuplicateAccount', true);
        SwitchList.add(TriggerSwitch2);
        TriggerSwitch__c TriggerSwitch19=TestDataUtil.createTriggerSwitch('AccountTrigger', true);
        SwitchList.add(TriggerSwitch19);
        insert switchList;
        
        Account parentAcc = TestDataUtil.createAccount();
        //parentAcc.GE_LGT_EM_PF_Type__c='ZEAG';
        insert parentAcc;
        
        Account childAcc = TestDataUtil.createAccount();
        //childAcc.GE_LGT_EM_PF_Type__c='ZEAG';
        childAcc.ParentId=parentAcc.ID;
        childAcc.GE_LGT_C_I__c=True;
        childAcc.GE_LGT_Utility__c=True;
        childAcc.GE_LGT_Controls__c=True;
        childAcc.GE_LGT_Roadway__c=True;
        childAcc.Others__c=True;
        childAcc.Lamp_Ballast__c=True;
        childAcc.GE_LGT_Architecture__c=True;
        childAcc.GE_LGT_DOT__c=True;
        childAcc.GE_LGT_Sports__c=True;
        insert childAcc;
    }
    static testMethod void updateIsGlobalParentActiveOnGlobalAccountTest()
    {
        List<TriggerSwitch__c> switchList=new List<TriggerSwitch__c>();
        TriggerSwitch__c TriggerSwitch1=TestDataUtil.createTriggerSwitch('GE_LGT_EM_AvoidDuplicateAccount', true);
        SwitchList.add(TriggerSwitch1);
        TriggerSwitch__c TriggerSwitch2=TestDataUtil.createTriggerSwitch('GE_LGT_preventDuplicateAccount', true);
        SwitchList.add(TriggerSwitch2);
        TriggerSwitch__c TriggerSwitch19=TestDataUtil.createTriggerSwitch('AccountTrigger', true);
        SwitchList.add(TriggerSwitch19);
        insert switchList;
        //ID recSAPFAAgentypeID =Schema.SObjectType.Account.getRecordTypeInfosByName().get('SAP Account - Fixture Agent').getRecordTypeId();
        ID recGAtypeID =Schema.SObjectType.Account.getRecordTypeInfosByName().get('Global Agent Parent').getRecordTypeId();
        ID recSAPFAAgentypeID =Schema.SObjectType.Account.getRecordTypeInfosByName().get('Sunset Account').getRecordTypeId();
        Account parentAcc = TestDataUtil.createAccount();
        parentAcc.RecordTypeid=recGAtypeID;
        parentAcc.GE_LGT_EM_CustomerActiveFlag__c=true;
        insert parentAcc;
        
        Account childAcc = TestDataUtil.createAccount();
        childAcc.RecordTypeid=recSAPFAAgentypeID;
        childAcc.GE_LGT_EM_CustomerActiveFlag__c=true;
        childAcc.ParentId=parentAcc.ID;
        childAcc.GE_LGT_C_I__c=True;
        childAcc.GE_LGT_Utility__c=True;
        childAcc.GE_LGT_Controls__c=True;
        childAcc.GE_LGT_Roadway__c=True;
        childAcc.Others__c=True;
        childAcc.Lamp_Ballast__c=True;
        childAcc.GE_LGT_Architecture__c=True;
        childAcc.GE_LGT_DOT__c=True;
        childAcc.GE_LGT_Sports__c=True;
        insert childAcc;
        
        Account childAcc1 = TestDataUtil.createAccount();
        childAcc1.RecordTypeid=recSAPFAAgentypeID;
        childAcc1.GE_LGT_EM_CustomerActiveFlag__c=false;
        childAcc1.ParentId=parentAcc.ID;
        childAcc1.GE_LGT_C_I__c=True;
        childAcc1.GE_LGT_Utility__c=True;
        childAcc1.GE_LGT_Controls__c=True;
        childAcc1.GE_LGT_Roadway__c=True;
        childAcc1.Others__c=True;
        childAcc1.Lamp_Ballast__c=True;
        childAcc1.GE_LGT_Architecture__c=True;
        childAcc1.GE_LGT_DOT__c=True;
        childAcc1.GE_LGT_Sports__c=True;
        insert childAcc1;
    }
}